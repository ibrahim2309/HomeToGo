@model HomeToGo.ViewModels.CreateReservationViewModel

<h2>Create New Reservation</h2>

<form asp-action="CreateReservation">
    <div class="form-group">
        <label asp-for="Reservation.ListingId"></label><span class="text-danger">*</span>
        <select asp-for="Reservation.ListingId" asp-items="Model.ListingSelectList" class="form-control">
            <option value="">Select a listing...</option>
        </select>
        <span asp-validation-for="Reservation.ListingId" class="text-danger"></span>
    </div>
   <div class="form-group">
       <label asp-for="Reservation.CheckInDate"></label><span class="text-danger">*</span>
       <input type="date" asp-for="Reservation.CheckInDate" class="form-control" min="@DateTime.Now.ToString("yyyy-MM-dd")" value="@DateTime.Now.ToString("yyyy-MM-dd")"/>
       <span asp-validation-for="Reservation.CheckInDate" class="text-danger"></span>
   </div>
    <div class="form-group">
          <label asp-for="Reservation.CheckOutDate"></label><span class="text-danger">*</span>
          <input type="date" asp-for="Reservation.CheckOutDate" class="form-control" min="@DateTime.Now.AddDays(1).ToString("yyyy-MM-dd")" value="@DateTime.Now.AddDays(1).ToString("yyyy-MM-dd")"/>
          <span asp-validation-for="Reservation.CheckOutDate" class="text-danger"></span>
      </div>
   
     @if (ViewData.ModelState.ContainsKey("Occupied") && ViewData.ModelState["Occupied"].Errors.Count > 0)
        {
            <div class="alert alert-danger">
                @ViewData.ModelState["Occupied"].Errors.First().ErrorMessage
            </div>
        }
    <button type="submit" class="btn btn-primary">Create</button>
      <a asp-controller="Reservation" asp-action="Table" class="btn btn-secondary">Back to Reservations</a>
   </form>